[root@localhost tianlang]# mysql -h183.156.17.103 -u tianlang -p  本地登录

授权不要自己去改表，那样不好，应该使用GRANT命令:

GRANT 权限 ON 库名.表名 TO 用户名@主机名 IDENTIFIED BY "密码"

mysql> grant select,update on db.*  to user@'%' identified by 'user';

为数据库db创建一个只有修改权限密码为user的user用户;

权限有这些：
ALTER 修改表和索引 / 
CREATE 创建数据库和表 /
DELETE 删除表中已有的记录 /
DROP 抛弃（删除）数据库和表INDEX 创建或抛弃索引/
INSERT 向表中插入新行 /
REFERENCE 未用/
SELECT 检索表中的记录 /
UPDATE 修改现存表记录FILE 读或写服务器上的文件 / 
PROCESS 查看服务器中执行的线程信息或杀死线程RELOAD 重载授权表或清空日志、主机缓存或表缓存。 /
SHUTDOWN 关闭服务器 /
ALL 所有；ALL PRIVILEGES同义词/
USAGE 特殊的“无权限”权限/

3,添加一个远程用户，名为mindworks密码为mindworks
    GRANT ALL PRIVILEGES ON *.* TO mindworks@"%" IDENTIFIED BY 'mindworks' WITH GRANT             OPTION;

4,添加完用户后要刷新Mysql服务。
    flush privileges;
    
    Mysql创建、删除用户
MySql中添加用户,新建数据库,用户授权,删除用户,修改密码(注意每行后边都跟个;表示一个命令语句结束):

1.新建用户

登录MYSQL：
　　@>mysql -u root -p

　　@>密码

创建用户：
　　mysql> insert into mysql.user(Host,User,Password) values("localhost","test",password("1234"));

　　这样就创建了一个名为：test 密码为：1234 的用户。

　　注意：此处的"localhost"，是指该用户只能在本地登录，不能在另外一台机器上远程登录。如果想远程登录的话，将"localhost"改为"%"，表示在任何一台电脑上都可以登录。也可以指定某台机器可以远程登录。

然后登录一下：
　　mysql>exit;

　　@>mysql -u test -p

　　@>输入密码

　　mysql>登录成功

2.为用户授权

　　授权格式：grant 权限 on 数据库.* to 用户名@登录主机 identified by "密码";　

登录MYSQL（有ROOT权限），这里以ROOT身份登录：
　　@>mysql -u root -p

　　@>密码

首先为用户创建一个数据库(testDB)：
　　mysql>create database testDB;

授权test用户拥有testDB数据库的所有权限（某个数据库的所有权限）：
　　 mysql>grant all privileges on testDB.* to test@localhost identified by '1234';

 　　mysql>flush privileges;//刷新系统权限表

　　格式：grant 权限 on 数据库.* to 用户名@登录主机 identified by "密码";　

如果想指定部分权限给一用户，可以这样来写:
　　mysql>grant select,update on testDB.* to test@localhost identified by '1234';

　　mysql>flush privileges; //刷新系统权限表

授权test用户拥有所有数据库的某些权限： 　 
　　mysql>grant select,delete,update,create,drop on *.* to test@"%" identified by "1234";

     //test用户对所有数据库都有select,delete,update,create,drop 权限。

　 //@"%" 表示对所有非本地主机授权，不包括localhost。（localhost地址设为127.0.0.1，如果设为真实的本地地址，不知道是否可以，没有验证。）

//对localhost授权：加上一句grant all privileges on testDB.* to test@localhost identified by '1234';即可。

3.删除用户

 @>mysql -u root -p

 @>密码

 mysql>Delete FROM user Where User='test' and Host='localhost';

 mysql>flush privileges;

 mysql>drop database testDB; //删除用户的数据库

删除账户及权限：>drop user 用户名@'%';

　　　　　　　　>drop user 用户名@ localhost; 

4.修改指定用户密码

  @>mysql -u root -p

  @>密码

  mysql>update mysql.user set password=password('新密码') where User="test" and Host="localhost";

  mysql>flush privileges;

5.列出所有数据库

mysql>show database;

6.切换数据库

mysql>use '数据库名';

7.列出所有表

mysql>show tables;

8.显示数据表结构

mysql>describe 表名;

9.删除数据库和数据表

mysql>drop database 数据库名;

mysql>drop table 数据表名;
...................................................................................................
导出
mysqldump -u root -p 数据库名>文件名
导入
mysql -uroot -p 数据库名<文件名





mysql -uroot -p ; 进入mysql

mysql>show databases; 查询数据库

 2、导入数据库sql的时候，请确保sql文件为utf-8编码
     进入mysql命令行后输入    set names utf8;
 
    

mysql> CREATE DATABASE abc; 创建数据库abc

    再进入数据库        use test;
mysql>use database; 选择数据库进行操作

 在导入sql脚本        source test.sql;
mysql> source  /home/www/abc.sql; 向数据库abc导入sql数据文件


mysql>select * from admin; 查询admin表,验证导入情况!验证通过进行数据库4步操作;


mysql> drop database abc; 删除数据库abc


                                                                                       2013/9/6


GBK: create database test2 DEFAULT CHARACTER SET gbk COLLATE gbk_chinese_ci;

UTF8: CREATE DATABASE `test2` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci

注意：如果不是通过my.ini配置文件设置的内容，只在当前状态下有效，当重启数据库服务后失效。所以如果想要不出现乱码只有修改my.ini文件，数据库编码可以在创建数据库时候指定UTF8，如下：
|character_set_client      | utf8                                  |
| character_set_connection | utf8                                  |
| character_set_database   | utf8                                  |
| character_set_filesystem | binary                                |
| character_set_results    | utf8                                  |
| character_set_server     | latin1                                |
| character_set_system     | utf8           

注意该配置| character_set_server     | latin1 无法设置成UTF8
交互时候仍然会出现乱码。

只有当修改my.ini中设置UTF8，才会全部修改成UTF8

-------------------------
mysql设置编码命令 

SET character_set_client = utf8; 
SET character_set_connection = utf8; 
SET character_set_database = utf8; 
SET character_set_results = utf8;/*这里要注意很有用*/ 
SET character_set_server = utf8; 

SET collation_connection = utf8_bin; 
SET collation_database = utf8_bin; 
SET collation_server = utf8_bin; 

my.ini中配置默认编码 
default-character-set=utf8 

连接数据库设置编码 
jdbc:mysql://192.168.0.5:3306/test?characterEncoding=utf8 

/*****************************************java与mysq编码对应****************************************/ 
java中的常用编码UTF-8;GBK;GB2312;ISO-8859-1; 
对应mysql数据库中的编码utf8;gbk;gb2312;latin1

---------------------------
数据库连接串中指定字符集URL=jdbc:mysql://yourIP/college?user=root&password=yourPassword&useUnicode=true&characterEncoding=gbk


